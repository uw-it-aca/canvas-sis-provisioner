# Generated by Django 2.2.20 on 2021-04-22 22:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('sis_provisioner', '0019_externaltool_queue_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvalidEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=32)),
                ('section_id', models.CharField(max_length=80)),
                ('found_date', models.DateTimeField(auto_now_add=True)),
                ('deleted_date', models.DateTimeField(null=True)),
                ('priority', models.SmallIntegerField(choices=[(0, 'none'), (1, 'normal'), (2, 'high'), (3, 'immediate')], default=1)),
                ('queue_id', models.CharField(max_length=30, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='invalid_enrollment_check_required',
            field=models.BooleanField(null=True),
        ),
        migrations.AlterField(
            model_name='import',
            name='csv_type',
            field=models.SlugField(choices=[('account', 'sis_provisioner.models.account.Curriculum'), ('admin', 'sis_provisioner.models.admin.Admin'), ('user', 'sis_provisioner.models.user.User'), ('course', 'sis_provisioner.models.course.Course'), ('unused_course', 'sis_provisioner.models.term.Term'), ('enrollment', 'sis_provisioner.models.enrollment.Enrollment'), ('invalid_enrollment', 'sis_provisioner.models.enrollment.InvalidEnrollment'), ('group', 'sis_provisioner.models.group.Group')], max_length=20),
        ),
        migrations.AddField(
            model_name='invalidenrollment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis_provisioner.User'),
        ),
        migrations.AddConstraint(
            model_name='invalidenrollment',
            constraint=models.UniqueConstraint(fields=('user', 'role', 'section_id'), name='unique_enrollment'),
        ),
    ]
